# Generated by Django 3.2.4 on 2022-05-03 03:10

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import stats.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('standards', '0007_alter_assessment_assessment_code'),
        ('usermgmt', '0009_auto_20220430_1751'),
        ('playground', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='YearGPA',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(default=django.utils.timezone.now)),
                ('year', models.IntegerField(default=stats.models.get_year)),
                ('gpa', models.FloatField()),
                ('mock_gpa', models.FloatField()),
                ('playground', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='playground.playground')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usermgmt.student')),
            ],
            options={
                'ordering': ['student', 'year', '-datetime'],
            },
        ),
        migrations.CreateModel(
            name='SubjectGPA',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(default=django.utils.timezone.now)),
                ('gpa', models.FloatField()),
                ('mock_gpa', models.FloatField()),
                ('playground', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='playground.playground')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usermgmt.student')),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='standards.subject')),
            ],
            options={
                'ordering': ['student', 'subject', '-datetime'],
            },
        ),
    ]
